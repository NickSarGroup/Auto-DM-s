const puppeteer = require('puppeteer');

const sendMessage = async (username, message) => {
  const browser = await puppeteer.launch({
    headless: false,
    userDataDir: './profile',
    args: ['--no-sandbox', '--disable-setuid-sandbox'],
  });

  const page = await browser.newPage();

  // üëá –û—Ç–ª–∞–≤–ª–∏–≤–∞–µ–º –≤—Å–µ –æ—à–∏–±–∫–∏ –≤ –∫–æ–Ω—Å–æ–ª–∏ –±—Ä–∞—É–∑–µ—Ä–∞ –∏ –≤ –æ–∫–Ω–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
  page.on('error', err => {
    console.error('üî• Page crashed:', err);
  });

  page.on('pageerror', pageErr => {
    console.error('üî• Page error:', pageErr);
  });

  page.on('console', msg => {
    if (msg.type() === 'error') {
      console.error('üî• Console error:', msg.text());
    }
  });

  try {
    await page.goto('https://www.instagram.com/', { waitUntil: 'networkidle2' });

    try {
      await page.waitForSelector('svg[aria-label="Direct"]', { timeout: 10000 });
    } catch {
      console.log('üîë –ù–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω. –í–æ–π–¥–∏—Ç–µ –≤—Ä—É—á–Ω—É—é.');
      await page.waitForSelector('svg[aria-label="Direct"]', { timeout: 120000 });
    }

    await page.goto('https://www.instagram.com/direct/inbox/', { waitUntil: 'networkidle2' });
    await page.waitForTimeout(3000);

    await page.click('svg[aria-label="New message"]');
    await page.waitForTimeout(2000);

    await page.type('input[name="queryBox"]', username, { delay: 100 });
    await page.waitForTimeout(3000);

    await page.keyboard.press('ArrowDown');
    await page.keyboard.press('Enter');

    await page.click('div[role="dialog"] button[type="button"]:not([disabled])');
    await page.waitForTimeout(3000);

    await page.type('textarea', message, { delay: 50 });
    await page.keyboard.press('Enter');

    console.log(`‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ @${username}`);
    await browser.close();
  } catch (err) {
    console.error('‚ùå –û—Å–Ω–æ–≤–Ω–∞—è –æ—à–∏–±–∫–∞:', err);
    await browser.close();
  }
};

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö –æ—à–∏–±–æ–∫
process.on('unhandledRejection', (reason) => {
  console.error('üß® Unhandled Rejection:', reason);
});

process.on('uncaughtException', (err) => {
  console.error('üí• Uncaught Exception:', err);
});

// –ß—Ç–µ–Ω–∏–µ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
const [, , username, ...msgParts] = process.argv;
const message = msgParts.join(' ');

if (!username || !message) {
  console.log('‚ùå –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: node send.js <username> "<—Å–æ–æ–±—â–µ–Ω–∏–µ>"');
  process.exit(1);
}

sendMessage(username, message);
